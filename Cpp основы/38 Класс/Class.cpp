#include <iostream>
#include <string>
using namespace std;

class Human {
public:
	string Name;
	string Last_Name;
	string Age;
	string Sex;
};

int main() {
	setlocale(LC_ALL, "ru");
	Human Igor;
	Igor.Name = "Igor";
	Igor.Last_Name = "Labazov";
	Igor.Age = "24";
	Igor.Sex = "Male";


	Human Natasha;
	Natasha.Name = "Natasha";
	Natasha.Last_Name = "Ukolova";
	Natasha.Age = "21";
	Natasha.Sex = "Female";

	cout << "Возраст Игоря: " << Igor.Age << endl;
	cout << "Возраст Наташи: " << Natasha.Age << endl;

	/*
	К примеру, есть строка:
	int i = 0;

	Классом в этом случае будет выступать int, объектом i;

	В ООП есть 3 кита программирования. Инкапсуляция, наследование и полиморфизм.
	Инкапсуляция - это особенность, предоставленная пользователю пользоваться функционалом программы, не зная, какая в ней лежит начинка. Например, есть кофемолка. Нам всё равно, как она устроена внутри
	Какие внутри микросхемы и лопости, какой механизм для молки кофе предусмотрен. Главное, что кофе умеет молоть кофе и пользователь этим пользуется.
	Наследование - это способность класса производить потомков, которые имеют те же свойства, что и родитель. К примеру, есть 2 кофемолки КОФ 4999 и КОФ 5000. Они обе имеют свойства кофемолки, но одна
	цифровая, а другая аналоговая.
	Полиморфизм - Различные способы реализации, к примеру, взаимодействие пользователя с кофемолкой разное (одно цифровое, а другое аналоговое)
	*/
	return 0;
}