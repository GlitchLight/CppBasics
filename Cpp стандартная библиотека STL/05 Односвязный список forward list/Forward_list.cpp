#include <iostream>
#include <forward_list>
using namespace std;

int main() {
	setlocale(LC_ALL, "ru");
	forward_list <int> fl{ 1, 2, 3 }; // Это односвязный список.

	/* Скорость методов insert и erase ниже, чем в двусвязном списке. Нет методов push_back и pop_back. Последний элемент не хранит ссылку на предыдущий элемент, поэтому данные предыдущего элемента
	слишком долго менять. Для этого нужно проходить по всему списку.*/

	forward_list <int>::iterator it = fl.begin(); //cbegin() получает доступ к ячейке до. forward_list <int> - тип данных. ::iterator - обращение к статическому подклассу класса forward_list, я полагаю.

	it++;
	// it--; Такой реализации нет, т.к. для того, чтобы получить доступ к предыдущему элементу, в текущем элементе должен храниться его адрес. Или нужно проходить по всему списку. Здесь не реализован
	// Такой функционал, т.к. он не эффективен. Для этих целей лучше использовать двусвязный список.
	fl.insert_after(it, 13); //	fl.insert_after(fl.before_begin, 13) для того, чтобы вставить элемент перед первым элементом.
	fl.erase_after(it);
	for (int el : fl) {
		cout << el << ' ';
	}
	cout << endl;

	return 0;
}